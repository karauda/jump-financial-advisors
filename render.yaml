services:
  # Redis Key-Value Store
  - type: keyvalue
    name: financial-advisor-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere

  # Backend API
  - type: web
    name: financial-advisor-backend
    env: node
    buildCommand: cd backend && npm install
    startCommand: cd backend && npm run migrate && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3001
      - key: DATABASE_URL
        fromDatabase:
          name: financial-advisor-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: financial-advisor-redis
          type: keyvalue
          property: connectionString
      - key: SESSION_SECRET
        generateValue: true
      - key: OPENAI_API_KEY
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: GOOGLE_REDIRECT_URI
        sync: false
      - key: HUBSPOT_CLIENT_ID
        sync: false
      - key: HUBSPOT_CLIENT_SECRET
        sync: false
      - key: HUBSPOT_REDIRECT_URI
        sync: false
      - key: FRONTEND_URL
        sync: false

  # Frontend Static Site
  - type: web
    name: financial-advisor-frontend
    env: static
    buildCommand: cd frontend && npm install && npm run build
    staticPublishPath: frontend/dist
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      - key: VITE_API_URL
        sync: false

# PostgreSQL Database
databases:
  - name: financial-advisor-db
    databaseName: financial_advisor_ai
    user: postgres
    plan: starter
    postgresMajorVersion: '16'
    ipAllowList:
      - source: 0.0.0.0/0
        description: everywhere
